import type { CommandsType, IApiLocationData } from '../types';
import { homepage } from '../../package.json';

type ButtonLabelsType = Record<'location' | 'flags' | 'cat' | 'quote' | 'advice', string>;
type CommandDescriptionsType = Record<
  'start' | 'stop' | 'help' | 'location' | 'flags' | 'cat' | 'quote',
  string
>;

export type LangType = {
  webApp: string;
  about: string;
  description: (commands: CommandsType) => string;
  help: (commands: CommandsType) => string;
  unknownCommand: (name: string) => string;
  defaultStartMessage: string;
  groupStartMessage: (title: string) => string;
  aliasStartMessage: (alias: string) => string;
  privateStartMessage: (name: string) => string;
  stopCommand: string;
  locationAnswer: (answer: IApiLocationData) => string;
  buttonLabel: (button: keyof ButtonLabelsType) => string;
  commandDescription: (command: keyof CommandDescriptionsType) => string;
  flagSettings: string;
  flagSettingsEmpty: string;
  flagEmptyAnswer: string;
  flagAnswer: string;
  flagsMore: string;
  flagsSuccessAnswer: (name: string) => string;
  flagsSuccessEmptyAnswer: (name: string) => string;
  flagsErrorAnswer: (errorName: string, name: string) => string;
  catNotFound: string;
};

const buttonLabels: ButtonLabelsType = {
  location: 'üìç –ü–æ–≥–æ–¥–∞ –ø–æ –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏',
  flags: 'üåç –§–ª–∞–≥–∏',
  cat: 'üêæ –ú—É–∞! üêæ',
  quote: 'üí¨ –ö—Ä—É—Ç–∞—è —Ü–∏—Ç–∞—Ç–∞',
  advice: 'üß® –û—Ç–º–æ—á–∏—Ç—å',
};

const commandDescriptions: CommandDescriptionsType = {
  start: '–ï—Å–ª–∏ —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫',
  stop: '–£–±—Ä–∞—Ç—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É',
  help: '–°–ø–∏—Å–æ–∫ –≤–æ–∑–º–æ–∂–Ω—ã—Ö –∫–æ–º–∞–Ω–¥',
  location: 'üìç –ü–æ–≥–æ–¥–∞ –ø–æ –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏',
  flags: '–£–≥–∞–¥–∞–π —Å—Ç—Ä–∞–Ω—É üö©',
  cat: '–ó–∞ –∫–æ—Ç–∏–∫–æ–º! üß∂',
  quote: '–£–º–Ω–æ–µ —Å–ª–æ–≤–æ üóØ',
};

const description = (commands: CommandsType) => `–ö–æ–º–∞–Ω–¥—ã:
/${commands.start.command} ‚Äî ${commands.start.description}
/${commands.flags.command} ‚Äî ${commands.flags.description}
/${commands.cat.command} ‚Äî ${commands.cat.description}
/${commands.quote.command} ‚Äî ${commands.quote.description}
/${commands.help.command} ‚Äî ${commands.help.description}
/${commands.stop.command} ‚Äî ${commands.stop.description}
${commands.location.description}

–ò—Å—Ö–æ–¥–Ω—ã–π –∫–æ–¥:
${homepage}`;

const help = (commands: CommandsType) => `
/${commands.start.command} ‚Äî ${commands.start.description}
/${commands.flags.command} ‚Äî ${commands.flags.description}
/${commands.cat.command} ‚Äî ${commands.cat.description}
/${commands.quote.command} ‚Äî ${commands.quote.description}
/${commands.stop.command} ‚Äî ${commands.stop.description}
${commands.location.description}`;

const unknownCommand = (name: string) => `${name}, –Ω–µ –ø–æ–Ω–∏–º–∞—é —Ç–µ–±—è! üòà
–í–æ–∑–º–æ–∂–Ω–æ, –∫–Ω–æ–ø–∫–∞ –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª–∞.
–ü–æ–ø—Ä–æ–±—É–π –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∫–æ–º–∞–Ω–¥—É /start –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –º–µ–Ω—é.`;

const locationAnswer = (answer: IApiLocationData) => {
  const getEmoji = (temp: number) => {
    if (temp <= -10) return 'ü•∂';
    if (temp <= 0) return '‚ùÑÔ∏è';
    if (temp <= 15) return 'üå•Ô∏è';
    if (temp <= 25) return 'üå§Ô∏è';
    return 'üî•';
  };

  return `
üåç *${answer.name}*

${getEmoji(answer.main.temp)} _–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞_: ${answer.main.temp} ‚ÑÉ
ü§î _–û—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫_: ${answer.main.feels_like} ‚ÑÉ
üíß _–í–ª–∞–∂–Ω–æ—Å—Ç—å_: ${answer.main.humidity}%
üìà _–î–∞–≤–ª–µ–Ω–∏–µ_: ${answer.main.pressure} –º–º —Ä—Ç. —Å—Ç.
${answer.wind.speed > 0 ? `üí® _–í–µ—Ç–µ—Ä_: ${answer.wind.speed} –º/—Å` : 'üü¶ _–®—Ç–∏–ª—å_'}`;
};

export const ru: LangType = {
  webApp: 'üåê –û—Ç–∫—Ä—ã—Ç—å —Å–∞–π—Ç FlagConnect',
  about: '–ë–æ—Ç –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø–æ–≥–æ–¥—É –∏ –∫–æ—Ç–∏–∫–æ–≤ üêà\n–ê –µ—â—ë —Ü–∏—Ç–∞—Ç—ã –∏ —Ü–µ–Ω–Ω—ã–µ —Å–æ–≤–µ—Ç—ã ü§≠',
  description,
  help,
  unknownCommand,
  defaultStartMessage: '–î–µ—Ä–∂–∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É! üòà',
  groupStartMessage: (title: string) => `–ü—Ä–∏–≤–µ—Ç, —á–∞—Ç *${title}*! üòà`,
  aliasStartMessage: (alias: string) => `–ë—É–¥—å –∫–∞–∫ –¥–æ–º–∞, *${alias}*! üòà`,
  privateStartMessage: (name: string) => `–ë—É–¥—å –∫–∞–∫ –¥–æ–º–∞, –ø—É—Ç–Ω–∏–∫ *${name}*! üòà`,
  stopCommand: 'Stopped',
  locationAnswer,
  buttonLabel: (button: keyof ButtonLabelsType) => buttonLabels[button],
  commandDescription: (command: keyof CommandDescriptionsType) => commandDescriptions[command],
  flagSettings: '‚ö†Ô∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –Ω–µ—Å—Ç–∞–±–∏–ª—å–Ω—ã\n–°–∫–æ–ª—å–∫–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –æ—Ç–≤–µ—Ç–∞?',
  flagSettingsEmpty: '–ë–µ–∑ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤',
  flagEmptyAnswer: '–ü–æ–∫–∞–∑–∞—Ç—å –æ—Ç–≤–µ—Ç',
  flagAnswer: '–ö–∞–∫–∞—è —ç—Ç–æ —Å—Ç—Ä–∞–Ω–∞?',
  flagsMore: '–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å',
  flagsSuccessAnswer: (name: string) => `‚òëÔ∏è –ü—Ä–∞–≤–∏–ª—å–Ω–æ, —ç—Ç–æ ${name}`,
  flagsSuccessEmptyAnswer: (name: string) => `–≠—Ç–æ ${name}`,
  flagsErrorAnswer: (errorName: string, name: string) =>
    `–í—ã –æ—Ç–≤–µ—Ç–∏–ª–∏ ${errorName}.\n‚ùå –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ, —ç—Ç–æ ${name}`,
  catNotFound: '–ö–æ—Ç —É–±–µ–∂–∞–ª –≤ —Å–µ—Ä–≤–µ—Ä–∞. –ü–æ–ø—Ä–æ–±—É–π –ø–æ–∑–∂–µ üêæ',
};
